udevadm info /dev/sda를 통해 나오는 요소들중 직관적으로 알 수 없는 것중 MAJOR와 MINOR가 있다.

Major(주번호)는 Device 파일을 관리하는 I-Node에 Minor(부번호)와 함께 기록되어 있으며 주번호 + 부번호로 디바이스 드라이버 내부 함수를 호출할 수 있는 Key로 사용된다.
+ /proc/devices에서 현재 시스템에서 실제로 사용중인 리스트의 Major를 확인할 수 있다.

Terminal(TTY) = 4, SCSI hard disk = 8등 리눅스에서 각 디바이스가 사용하는 주 번호가 기록되어 있고 sda major 8, minor 0, sdb major 8, minor 16이 의미하는 것은 sda, sdb가 둘다 hard disk이며 각 device는 최대 15개의 파티션 생성이 가능함을 의미한다.
sda1,2,3 등은 파티셔닝 되어있는것을 의미하며 tty1,2,3 등은 여러개의 모니터에 연결되어 있을때 major4, minor 1,2,3 등으로 구분짓고 있다.

Device Driver는 문자, 블록, 네트워크로 구분지으나 최근에는 이러한 구분이 모호하다고 한다.
블록과 문자의 차이는 페이지 캐싱 여부라고 하는데 예를들어 HDD -> RAM에서 RAM에 접근할 때 논리적인 블록에 대한 읽기/쓰기 요청이 발생했다고 말한다.

------------------------------------------------------------------------------------------------
Block devices
- Random Access 가능
- HDD, 블루레이, 플래시 메모리

Character devices
- Random Access 불가능
- 키보드, 마우스, 프린터

------------------------------------------------------------------------------------------------

ex) USB를 꽂으면 /sys에서 일어나는 일
- /sys/dev/block의 <major 8, minor 32, 33>이 생긴다. <-- 이거야 USB block device driver가 잡힌거
- /sys/dev/char의 <major 189, minor 3>, <21:3>, <247:3>, 이 없어졌다. <-- 얘는 뭐지
 ** 2.궁금한거 **

udev와 sysfs와의 관계
1. 시스템 부팅시 udevd(udev daemon)이 각 rules 파일들을 읽고 메모리에 규칙사항들을 저장한다.
2. 커널 모듈이 디바이스 연결/해제를 하게되면 해당 장치들이 /sys 디렉토리에 마운트 된 sysfs 파일시스템에 나타나게 된다.
3. 등록된 장치(모든 장치라고 생각하는데 혹시 udev rules에 저장한 것만?)에서 변화가 발생하면(연결/해제)가 발생하면 kernel에서 event(uevent)를 보내주며 udevd가 rules를 수행한다.

- kernel은 모든 디바이스 event를 dispatch 하더라도 rules에 포함된 내용만 수행

---------------------------------------------------------------------------------------------------
TTY(teletypewriter)

---------------------------------------------------------------------------------------------------
DMA(Direct Memory Access) <-> Direct I/O (DMA 미사용)
Direct I/O는 처리 완료시 CPU 대기가 필요한데 이게 Character devices라면
키보드 마우스 프린터의 경우는 Non DMA?

Port mapped I/O - 32bit, 
memory-mapped I/O - 64bit,

동일 System 안의 Device Driver는 Port or memory mapped로 되어있는 것인가?
두 방식의 특성 (ex prot mapped i/o instruction 수가 작고 임베디드 환경에 적합)이 있는데 각 디바이스가 해당 I/O를 사용하게되는 배경?

---------------------------------------------------------------------------------------------------

